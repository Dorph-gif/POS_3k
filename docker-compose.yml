version: '3.8'

services:
  db:
    image: postgres:14
    restart: always
    environment:
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
      POSTGRES_DB: mydb
    ports:
      - "5433:5432"
    volumes:
      - db_data:/var/lib/postgresql/data

  zookeeper:
    image: confluentinc/cp-zookeeper:7.4.0
    restart: always
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "2182:2181"

  kafka:
    image: confluentinc/cp-kafka:7.4.0
    restart: always
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
      - "9093:9093"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INTERNAL:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: INTERNAL://kafka:9092
      KAFKA_LISTENERS: INTERNAL://0.0.0.0:9092
      KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    healthcheck:
      test: ["CMD-SHELL", "kafka-topics --bootstrap-server kafka:9092 --list || exit 1"]
      interval: 10s
      timeout: 10s
      retries: 10

  redis:
    image: redis:latest
    restart: always
    ports:
      - "6379:6379"

  bot_logic:
    build:
      context: .
      dockerfile: src/bot_logic/Dockerfile
    restart: always
    environment:
      REDIS_HOST: redis
      REDIS_PORT: 6379
    volumes:
      - ./logs:/app/logs
    depends_on:
      - redis

  server:
    build:
      context: .
      dockerfile: src/server/Dockerfile
    restart: on-failure
    ports:
      - "8000:8000"
    depends_on:
      kafka:
        condition: service_healthy
      redis:
        condition: service_started
    environment:
      KAFKA_BOOTSTRAP_SERVERS: kafka:9092
      REDIS_HOST: redis
      REDIS_PORT: 6379
    volumes:
      - ./logs:/app/logs

  notification_service:
    build:
      context: .
      dockerfile: src/notification_service/Dockerfile
    restart: on-failure
    ports:
      - "8002:8002"
    depends_on:
      kafka:
        condition: service_healthy
    environment:
      KAFKA_BOOTSTRAP_SERVERS: kafka:9092
    volumes:
      - ./logs:/app/logs

  scrapper:
    build:
      context: .
      dockerfile: src/scrapper/Dockerfile
    restart: always
    ports:
      - "8001:8001"
      - "8003:8003"
    depends_on:
      db:
        condition: service_started
      kafka:
        condition: service_healthy
    environment:
      DATABASE_URL: postgresql://user:password@db:5432/mydb
      KAFKA_BOOTSTRAP_SERVERS: kafka:9092
    volumes:
      - ./logs:/app/logs

volumes:
  db_data:
